name: CI CD Test Server

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Set Image Tag
        id: vars
        run: echo "::set-output name=tag::docker-repo.minq.work/my-app:$(git rev-parse --short HEAD)"


      - name: Build and Push Image with Jib
        env:
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
        run: |
          ./gradlew jib -Pjib.to.image=${IMAGE_TAG}



      - name: Setup SSH and Deploy
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -p 9981 -H minq.work >> ~/.ssh/known_hosts
          ssh -o StrictHostKeyChecking=no -p 9981 daelim@minq.work \
          "docker stack deploy -c docker-compose.yml my-app"
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.12-7/x64
          JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.12-7/x64
          IMAGE_TAG: ${{ steps.vars.outputs.tag }}
